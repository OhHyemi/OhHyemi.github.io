- id: prev_page
  # translation: "Prev Page"
  translation: "이전 페이지"

- id: next_page
  # translation: "Next Page"
  translation: "다음 페이지"

- id: first_page
  # translation: "Prev Page"
  translation: "처음"

- id: last_page
  # translation: "Next Page"
  translation: "마지막"

- id: read_time
  translation:
    # one : "1 min"
    # other: "{{ .Count }} min"
    one : <span><svg class="svg--time" aria-hidden="true" focusable="false" data-prefix="far" data-icon="clock" role="img" xmlns="http://www.w3.org/2000/svg" width="13.19" height="13.19" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"></path></svg> 1 분 소요</span>
    other: <span><svg class="svg--time" aria-hidden="true" focusable="false" data-prefix="far" data-icon="clock" role="img" xmlns="http://www.w3.org/2000/svg" width="13.19" height="13.19" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"></path></svg> {{ .Count }} 분 소요</span>

- id: toc
  # translation: "On this page"
  translation: "목차"

- id: translations
  # translation: "Translations"
  translation: "번역"

- id: home
  translation: "Home"

- id: code_copy
  # translation: "copy"
  translation: <span class="octicon"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon-copy"><path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path></svg></span>

- id: code_copied
  # translation: "copied!"
  translation: <div class="tooltip">Copied!</div><span class="octicon done" style="color:#3fb950;"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon-check"><path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path></svg></span>

- id: html
  translation: '하이퍼 텍스트 마크업 언어는 웹 페이지를 위한 지배적인 마크업 언어다. 또한, HTML은 제목, 단락, 목록 등과 같은 본문을 위한 구조적 의미를 나타내는 것뿐만 아니라 링크, 인용과 그 밖의 항목으로 구조적 문서를 만들 수 있는 방법을 제공한다.'

- id: css
  translation: "종속형 시트 또는 캐스케이딩 스타일 시트는 마크업 언어가 실제 표시되는 방법을 기술하는 스타일 언어로, HTML과 XHTML에 주로 쓰이며, XML에서도 사용할 수 있다. W3C의 표준이며, 레이아웃과 스타일을 정의할 때의 자유도가 높다. 기본 파일명은 style.css이다."

- id: javascript
  translation: "자바스크립트는 객체 기반의 스크립트 프로그래밍 언어이다. 이 언어는 웹 브라우저 내에서 주로 사용하며, 다른 응용 프로그램의 내장 객체에도 접근할 수 있는 기능을 가지고 있다. 또한 Node.js와 같은 런타임 환경과 같이 서버 프로그래밍에도 사용되고 있다."

- id: 자바스크립트
  translation: "자바스크립트는 객체 기반의 스크립트 프로그래밍 언어이다. 이 언어는 웹 브라우저 내에서 주로 사용하며, 다른 응용 프로그램의 내장 객체에도 접근할 수 있는 기능을 가지고 있다. 또한 Node.js와 같은 런타임 환경과 같이 서버 프로그래밍에도 사용되고 있다."

- id: ecma
  translation: "Ecma 인터내셔널은 정보와 통신 시스템을 위한 국제적 표준화 기구이다. 원래 이름은 European Computer Manufacturers Association 이었으나, 기구의 국제적 확장을 반영하여 현재의 이름으로 바뀌었다."

- id: ecmascript
  translation: "ECMA스크립트란, Ecma International이 ECMA-262 기술 규격에 따라 정의하고 있는 표준화된 스크립트 프로그래밍 언어를 말한다. 자바스크립트를 표준화하기 위해 만들어졌다. 액션스크립트와 J스크립트 등 다른 구현체도 포함하고 있다."

- id: algorithm
  translation: "알고리즘, 셈법은 수학과 컴퓨터과학, 언어학 또는 엮인 분야에서 어떠한 문제를 풀어맺기 위해 정해진 일련의 절차나 방법을 공식화한 형태로 표현한 것, 계산을 실행하기 위한 단계적 절차를 의미한다. 즉, 문제풀이에 필요한 계산절차 또는 처리과정의 순서를 뜻한다."

- id: 알고리즘
  translation: "알고리즘, 셈법은 수학과 컴퓨터과학, 언어학 또는 엮인 분야에서 어떠한 문제를 풀어맺기 위해 정해진 일련의 절차나 방법을 공식화한 형태로 표현한 것, 계산을 실행하기 위한 단계적 절차를 의미한다. 즉, 문제풀이에 필요한 계산절차 또는 처리과정의 순서를 뜻한다."

- id: c
  translation: 'C는 1972년 켄 톰슨과 데니스 리치가 벨 연구소에서 일할 당시 새로 개발된 유닉스 운영 체제에서 사용하기 위해 개발한 프로그래밍 언어이다. 켄 톰슨은 BCPL언어를 필요에 맞추어 개조해서 "B"언어(언어를 개발한 벨 연구소의 B를 따서)라 명명했고, 데니스 리치가 이것을 개선하여 C 언어가 탄생했다. 유닉스 시스템의 바탕 프로그램은 모두 C로 작성되었고, 수많은 운영 체제의 커널 또한 C로 만들어졌다. 오늘날 많이 쓰이는 C++는 C에서 객체 지향형이다.'

- id: c++
  translation: "C++는 AT&T 벨 연구소의 비야네 스트롭스트룹이 C언어 기반으로 1983년 발표하여 발전한 프로그래밍 언어이다."

- id: cpp
  translation: "C++는 AT&T 벨 연구소의 비야네 스트롭스트룹이 C언어 기반으로 1983년 발표하여 발전한 프로그래밍 언어이다."

- id: csharp
  translation: "C#은 마이크로소프트에서 개발한 객체 지향 프로그래밍 언어로, 닷넷 프레임워크의 한 부분으로 만들어졌으며 나중에 ECMA 와 ISO 의 표준으로 자리잡았다. C++와 자바의 문법과 비슷한 문법을 가지고 있다."

- id: java
  translation: "자바는 썬 마이크로시스템즈의 제임스 고슬링과 다른 연구원들이 개발한 객체 지향적 프로그래밍 언어이다. 1991년 그린 프로젝트라는 이름으로 시작해 1995년에 발표했다."

- id: 자바
  translation: "자바는 썬 마이크로시스템즈의 제임스 고슬링과 다른 연구원들이 개발한 객체 지향적 프로그래밍 언어이다. 1991년 그린 프로젝트라는 이름으로 시작해 1995년에 발표했다."

- id: go
  translation: "Go는 2009년 구글에서 일하는 로버트 그리즈머, 롭 파이크, 켄 톰프슨이 개발한 프로그래밍 언어이다. 가비지 컬렉션 기능이 있고, 병행성을 잘 지원하는 컴파일 언어다. 구문이 C와 비슷하지만 메모리 보안, 쓰레기 수집, 구조 타이핑, CSP 스타일 병행성을 제공한다."

- id: kotlin
  translation: "코틀린은 JVM에서 동작하는 프로그래밍 언어이다. 2011년 7월, 젯브레인사가 공개하였다. 파일 확장자는 .kt 또는 .kts를 사용한다. 코틀린은 2019년 5월 7일 이후로 구글의 안드로이드 앱 개발에서 선호하는 언어가 되었다."

- id: 코틀린
  translation: "코틀린은 JVM에서 동작하는 프로그래밍 언어이다. 2011년 7월, 젯브레인사가 공개하였다. 파일 확장자는 .kt 또는 .kts를 사용한다. 코틀린은 2019년 5월 7일 이후로 구글의 안드로이드 앱 개발에서 선호하는 언어가 되었다."

- id: scala
  translation: '스칼라(영어: Scala)는 객체 지향 프로그래밍 언어와 함수형 프로그래밍의 요소가 결합된 다중패러다임 프로그래밍 언어이다. 스칼라라는 이름은 "Scalable Language (확장 가능한 언어)"에서 유래된 것이다.'

- id: 스칼라
  translation: '스칼라(영어: Scala)는 객체 지향 프로그래밍 언어와 함수형 프로그래밍의 요소가 결합된 다중패러다임 프로그래밍 언어이다. 스칼라라는 이름은 "Scalable Language (확장 가능한 언어)"에서 유래된 것이다.'

- id: clojure
  translation: "클로저(Clojure)는 리치 히키(Rich Hickey)가 만든 리스프 프로그래밍 언어의 방언으로서, 범용 함수형 언어이다. 이 언어는 불변값과 시간-진행 구문을 통한 프로그래밍을 강조하는데, 이는 보다 탄탄한 프로그램, 특히 멀티스레드 프로그램의 개발을 용이하게 하기 위해서이다."

- id: 클로저
  translation: "클로저(Clojure)는 리치 히키(Rich Hickey)가 만든 리스프 프로그래밍 언어의 방언으로서, 범용 함수형 언어이다. 이 언어는 불변값과 시간-진행 구문을 통한 프로그래밍을 강조하는데, 이는 보다 탄탄한 프로그램, 특히 멀티스레드 프로그램의 개발을 용이하게 하기 위해서이다."
  
- id: groovy
  translation: "그루비(Groovy)는 자바에 파이썬, 루비, 스몰토크등의 특징을 더한 동적 객체 지향 프로그래밍 언어이다."

- id: 그루비
  translation: "그루비(Groovy)는 자바에 파이썬, 루비, 스몰토크등의 특징을 더한 동적 객체 지향 프로그래밍 언어이다."
  
- id: python
  translation: "파이썬은 1991년 프로그래머인 귀도 반 로섬이 발표한 고급 프로그래밍 언어로, 플랫폼에 독립적이며 인터프리터식, 객체지향적, 동적 타이핑 대화형 언어이다. 파이썬이라는 이름은 귀도가 좋아하는 코미디 〈Monty Python's Flying Circus〉에서 따온 것이다."

- id: 파이썬
  translation: "파이썬은 1991년 프로그래머인 귀도 반 로섬이 발표한 고급 프로그래밍 언어로, 플랫폼에 독립적이며 인터프리터식, 객체지향적, 동적 타이핑 대화형 언어이다. 파이썬이라는 이름은 귀도가 좋아하는 코미디 〈Monty Python's Flying Circus〉에서 따온 것이다."
  
- id: typescript
  translation: "타입스크립트는 자바스크립트의 슈퍼셋인 오픈소스 프로그래밍 언어이다. 마이크로소프트에서 개발, 유지하고 있으며 엄격한 문법을 지원한다. C#의 리드 아키텍트이자 델파이, 터보 파스칼의 창시자인 Anders Hejlsberg가 개발에 참여한다."
  
- id: npm
  translation: "npm 은 자바스크립트 프로그래밍 언어를 위한 패키지 관리자이다. 자바스크립트 런타임 환경 Node.js의 기본 패키지 관리자이다. 명령 줄 클라이언트, 그리고 공개 패키지와 지불 방식의 개인 패키지의 온라인 데이터베이스로 이루어져 있다."

- id: vue.js
  translation: "Vue.js는 웹 애플리케이션의 사용자 인터페이스를 만들기 위해 사용하는 오픈 소스 프로그레시브 자바스크립트 프레임워크이다."

- id: react
  translation: "리액트는 자바스크립트 라이브러리의 하나로서 사용자 인터페이스를 만들기 위해 사용된다. 페이스북과 개별 개발자 및 기업들 공동체에 의해 유지보수된다. 리액트는 싱글 페이지 애플리케이션이나 모바일 애플리케이션 개발에 사용될 수 있다."

- id: 리액트
  translation: "리액트는 자바스크립트 라이브러리의 하나로서 사용자 인터페이스를 만들기 위해 사용된다. 페이스북과 개별 개발자 및 기업들 공동체에 의해 유지보수된다. 리액트는 싱글 페이지 애플리케이션이나 모바일 애플리케이션 개발에 사용될 수 있다."

- id: react-native
  translation: "리액트 네이티브는 페이스북이 개발한 오픈 소스 모바일 애플리케이션 프레임워크이다. 안드로이드, iOS, 웹, UWP용 애플리케이션을 개발하기 위해 사용되며, 개발자들이 네이티브 플랫폼 기능과 더불어 리액트를 사용할 수 있게 한다. 완전하지 않은 Qt 포팅 또한 존재한다."

- id: 리액트-네이티브
  translation: "리액트 네이티브는 페이스북이 개발한 오픈 소스 모바일 애플리케이션 프레임워크이다. 안드로이드, iOS, 웹, UWP용 애플리케이션을 개발하기 위해 사용되며, 개발자들이 네이티브 플랫폼 기능과 더불어 리액트를 사용할 수 있게 한다. 완전하지 않은 Qt 포팅 또한 존재한다."

- id: flutter
  translation: "플러터는 구글이 개발한 오픈 소스 모바일 애플리케이션 개발 프레임워크이다. 안드로이드, iOS용 애플리케이션 개발을 위해, 또 구글 퓨시아용 애플리케이션 개발의 주된 방식으로 사용된다."

- id: 플러터
  translation: "플러터는 구글이 개발한 오픈 소스 모바일 애플리케이션 개발 프레임워크이다. 안드로이드, iOS용 애플리케이션 개발을 위해, 또 구글 퓨시아용 애플리케이션 개발의 주된 방식으로 사용된다."

- id: xamarin
  translation: "자마린은 2011년 5월, Mono, MonoTouch, Mono for Android 개발자인 미구엘 데 이카사에 의해 설립된 기업이다. 이러한 3 개의 소프트웨어는 공통 언어 기반으로 크로스 플랫폼을 구현하기 위해 만들어졌다."

- id: 자마린
  translation: "자마린은 2011년 5월, Mono, MonoTouch, Mono for Android 개발자인 미구엘 데 이카사에 의해 설립된 기업이다. 이러한 3 개의 소프트웨어는 공통 언어 기반으로 크로스 플랫폼을 구현하기 위해 만들어졌다."

- id: .net
  translation: "닷넷은 닷넷 프레임워크의 오픈 소스 버전으로 개발하여 공개된 소프트웨어 프레임워크이다."

- id: 닷넷
  translation: "닷넷은 닷넷 프레임워크의 오픈 소스 버전으로 개발하여 공개된 소프트웨어 프레임워크이다."

- id: .net-core
  translation: "ASP.NET Core는 Windows, Linux, OSX 등의 Cross Platform을 지원하기 위해 전면적으로 재작성된 Web Framework이다. 기존의 ASP.NET은 1.0부터 4.6까지 이르면서 많은 부분이 수정되고 개선되었는데, ASP.NET Core 1.0 (이전에 ASP.NET 5 로 불리움)은 기존의 프레임워크를 보완 개선했다기 보다는 완전히 새로운 프레임워크를 다시 썼다고 볼 수 있다."

- id: 닷넷-코어
  translation: "ASP.NET Core는 Windows, Linux, OSX 등의 Cross Platform을 지원하기 위해 전면적으로 재작성된 Web Framework이다. 기존의 ASP.NET은 1.0부터 4.6까지 이르면서 많은 부분이 수정되고 개선되었는데, ASP.NET Core 1.0 (이전에 ASP.NET 5 로 불리움)은 기존의 프레임워크를 보완 개선했다기 보다는 완전히 새로운 프레임워크를 다시 썼다고 볼 수 있다."

- id: blazor
  translation: "Blazor는 개발자가 C # 및 HTML을 사용하여 웹 앱을 만들 수 있도록하는 무료 오픈 소스 웹 프레임 워크입니다. Microsoft에서 개발 중입니다."

- id: 블레이저
  translation: "Blazor는 개발자가 C # 및 HTML을 사용하여 웹 앱을 만들 수 있도록하는 무료 오픈 소스 웹 프레임 워크입니다. Microsoft에서 개발 중입니다."

- id: markdown
  translation: "마크다운은 일반 텍스트 기반의 경량 마크업 언어다. 일반 텍스트로 서식이 있는 문서를 작성하는 데 사용되며, 일반 마크업 언어에 비해 문법이 쉽고 간단한 것이 특징이다."

- id: baekjoon
  translation: "백준 온라인 저지는 컴퓨터 프로그래밍 알고리즘 문제 풀이 서비스를 제공해주는 웹사이트이다."

- id: 백준
  translation: "백준 온라인 저지는 컴퓨터 프로그래밍 알고리즘 문제 풀이 서비스를 제공해주는 웹사이트이다."

- id: batch
  translation: "일괄 처리란 최종 사용자의 개입 없이 또는 실행을 스케줄링할 수 있는 작업의 실행을 의미한다. 컴퓨터 프로그램 흐름에 따라 순차적으로 자료를 처리하는 방식이다."

- id: generic
  translation: "제네릭 프로그래밍은 데이터 형식에 의존하지 않고, 하나의 값이 여러 다른 데이터 타입들을 가질 수 있는 기술에 중점을 두어 재사용성을 높일 수 있는 프로그래밍 방식이다."

- id: 제네릭
  translation: "제네릭 프로그래밍은 데이터 형식에 의존하지 않고, 하나의 값이 여러 다른 데이터 타입들을 가질 수 있는 기술에 중점을 두어 재사용성을 높일 수 있는 프로그래밍 방식이다."

- id: jpa
  translation: "자바 퍼시스턴스 API또는 자바 지속성 API(Java Persistence API, JPA)는 자바 플랫폼 SE와 자바 플랫폼 EE를 사용하는 응용프로그램에서 관계형 데이터베이스의 관리를 표현하는 자바 API이다."

- id: unity
  translation: "유니티는 3D 및 2D 비디오 게임의 개발 환경을 제공하는 게임 엔진이자, 3D 애니메이션과 건축 시각화, 가상현실 등 인터랙티브 콘텐츠 제작을 위한 통합 제작 도구이다."

- id: 유니티
  translation: "유니티는 3D 및 2D 비디오 게임의 개발 환경을 제공하는 게임 엔진이자, 3D 애니메이션과 건축 시각화, 가상현실 등 인터랙티브 콘텐츠 제작을 위한 통합 제작 도구이다."

- id: unreal-engine
  translation: "언리얼 엔진은 미국의 에픽게임즈에서 개발한 3차원 게임 엔진이다. 1994년부터 현재까지 꾸준한 개량을 통해 발전되고 있으며, 수십 개의 비디오 게임에 사용되고 있는 미들웨어 솔루션이다."

- id: 언리얼-엔진
  translation: "언리얼 엔진은 미국의 에픽게임즈에서 개발한 3차원 게임 엔진이다. 1994년부터 현재까지 꾸준한 개량을 통해 발전되고 있으며, 수십 개의 비디오 게임에 사용되고 있는 미들웨어 솔루션이다."

- id: 2d
  translation: "2차원(二次元, 영어: Two Dimension)은 차원이 2인 것을 가리킨다."

- id: 3d
  translation: "3차원(영어: Three Dimension)은 차원이 3인 것을 가리킨다. 면과 면으로 이루어져 있는 차원이고 우리가 사는 공간은 3차원이며 물리학에서는 시간을 포함하여 시공간으로 나타내는 일도 있다."

- id: directx
  translation: "Microsoft DirectX는 멀티미디어, 특히 게임 프로그래밍에서 마이크로소프트 플랫폼에서 작업을 위한 API의 집합이다. 다이렉트엑스는 마이크로소프트 윈도우, 세가, 드림캐스트, 마이크로소프트 엑스박스 및 엑스박스 360을 위한 비디오 게임 개발에 널리 쓰인다."

- id: windows
  translation: "마이크로소프트 윈도우는 마이크로소프트가 개발한 컴퓨터 운영 체제다. 애플이 개인용 컴퓨터에 처음으로 도입한 그래픽 사용자 인터페이스 운영 체제인 맥 OS에 대항하여, 당시 널리 쓰이던 MS-DOS에서 멀티태스킹과 GUI 환경을 제공하기 위한 응용 프로그램으로 처음 출시되었다."

- id: 윈도우
  translation: "마이크로소프트 윈도우는 마이크로소프트가 개발한 컴퓨터 운영 체제다. 애플이 개인용 컴퓨터에 처음으로 도입한 그래픽 사용자 인터페이스 운영 체제인 맥 OS에 대항하여, 당시 널리 쓰이던 MS-DOS에서 멀티태스킹과 GUI 환경을 제공하기 위한 응용 프로그램으로 처음 출시되었다."

- id: macos
  translation: "macOS는 애플이 개발한 유닉스 운영 체제이다. 최초의 유닉스인 AT&T 벨연구소 유닉스의 소스코드를 이어받은 유전적 유닉스에 속하며 동시에 유닉스 상표권을 소유하며 유닉스 표준을 만든 오픈그룹으로부터 유닉스 인증을 받아 기술적으로도 법률적으로도 완벽하게 유닉스 기준을 충족한다."

- id: 맥os
  translation: "macOS는 애플이 개발한 유닉스 운영 체제이다. 최초의 유닉스인 AT&T 벨연구소 유닉스의 소스코드를 이어받은 유전적 유닉스에 속하며 동시에 유닉스 상표권을 소유하며 유닉스 표준을 만든 오픈그룹으로부터 유닉스 인증을 받아 기술적으로도 법률적으로도 완벽하게 유닉스 기준을 충족한다."

- id: linux
  translation: "리눅스는 1991년 9월 17일 리누스 토르발스가 처음 출시한 운영 체제 커널인 리눅스 커널에 기반을 둔 오픈 소스 유닉스 계열 운영 체제 계열이다. 리눅스는 일반적으로 리눅스 배포판 안에 패키지 처리된다."

- id: 리눅스
  translation: "리눅스는 1991년 9월 17일 리누스 토르발스가 처음 출시한 운영 체제 커널인 리눅스 커널에 기반을 둔 오픈 소스 유닉스 계열 운영 체제 계열이다. 리눅스는 일반적으로 리눅스 배포판 안에 패키지 처리된다."

- id: unix
  translation: "유닉스는 교육 및 연구 기관에서 즐겨 사용되는 범용 다중 사용자 방식의 대화식, 시분할처리 시스템용 운영 체제이다. 1970년대 초반 벨 연구소 직원인 켄 톰슨, 데니스 리치 등이 소형 컴퓨터용으로 처음 개발하였다."

- id: 유닉스
  translation: "유닉스는 교육 및 연구 기관에서 즐겨 사용되는 범용 다중 사용자 방식의 대화식, 시분할처리 시스템용 운영 체제이다. 1970년대 초반 벨 연구소 직원인 켄 톰슨, 데니스 리치 등이 소형 컴퓨터용으로 처음 개발하였다."

- id: minix
  translation: "미닉스(MINIX)는 유닉스 계열 운영 체제의 하나다. 1987년 네덜란드의 암스테르담 자유대학교에 재직하던 교수 앤드루 타넨바움(Andrew Tanenbaum)이 교육용으로 개발하였다. 미닉스는 리눅스 커널의 창조에 영감을 주었다. 미닉스(Minix)라는 명칭은 미니멀(minimal)과 유닉스(Unix)로부터 비롯되었다. BSD 라이선스 아래 출시된, MINIX는 자유/오픈 소스 소프트웨어다."

- id: 미닉스
  translation: "미닉스(MINIX)는 유닉스 계열 운영 체제의 하나다. 1987년 네덜란드의 암스테르담 자유대학교에 재직하던 교수 앤드루 타넨바움(Andrew Tanenbaum)이 교육용으로 개발하였다. 미닉스는 리눅스 커널의 창조에 영감을 주었다. 미닉스(Minix)라는 명칭은 미니멀(minimal)과 유닉스(Unix)로부터 비롯되었다. BSD 라이선스 아래 출시된, MINIX는 자유/오픈 소스 소프트웨어다."

- id: twitch
  translation: "트위치는 비디오 게임 전용 인터넷 개인 방송 서비스이다. 미국 샌프란시스코를 본사로 두고 있으며 2011년 6월 6일부터 시작되었다."

- id: 트위치
  translation: "트위치는 비디오 게임 전용 인터넷 개인 방송 서비스이다. 미국 샌프란시스코를 본사로 두고 있으며 2011년 6월 6일부터 시작되었다."

- id: ios
  translation: "iOS는 애플의 모바일 운영 체제이다."

- id: android
  translation: "안드로이드는 휴대 전화를 비롯한 휴대용 장치를 위한 운영 체제와 미들웨어, 사용자 인터페이스 그리고 표준 응용 프로그램웹 브라우저, 이메일 클라이언트, 단문 메시지 서비스(SMS), MMS 등을 포함하고 있는 소프트웨어 스택이자 모바일 운영 체제이다."

- id: 안드로이드
  translation: "안드로이드는 휴대 전화를 비롯한 휴대용 장치를 위한 운영 체제와 미들웨어, 사용자 인터페이스 그리고 표준 응용 프로그램웹 브라우저, 이메일 클라이언트, 단문 메시지 서비스(SMS), MMS 등을 포함하고 있는 소프트웨어 스택이자 모바일 운영 체제이다."

- id: ms
  translation: "마이크로소프트는 컴퓨팅 파워를 지원해주는 클라우드 컴퓨팅 사업을 중심으로, 파워포인트, 워드와 엑셀, 원노트, 아웃룩, 팀즈 등의 오피스 365, Xbox 게임, 컴퓨터 운영체제 소프트웨어인 윈도우 등의 사업을 하는 미국의 기업이다. 2014년부터 사티아 나델라가 맡고 있다."

- id: microsoft
  translation: "마이크로소프트는 컴퓨팅 파워를 지원해주는 클라우드 컴퓨팅 사업을 중심으로, 파워포인트, 워드와 엑셀, 원노트, 아웃룩, 팀즈 등의 오피스 365, Xbox 게임, 컴퓨터 운영체제 소프트웨어인 윈도우 등의 사업을 하는 미국의 기업이다. 2014년부터 사티아 나델라가 맡고 있다."

- id: 마이크로소프트
  translation: "마이크로소프트는 컴퓨팅 파워를 지원해주는 클라우드 컴퓨팅 사업을 중심으로, 파워포인트, 워드와 엑셀, 원노트, 아웃룩, 팀즈 등의 오피스 365, Xbox 게임, 컴퓨터 운영체제 소프트웨어인 윈도우 등의 사업을 하는 미국의 기업이다. 2014년부터 사티아 나델라가 맡고 있다."

- id: apple
  translation: "애플은 미국 캘리포니아의 아이폰, 아이패드, 애플 워치, 에어팟, 아이맥, 맥북, 맥 프로, 홈팟 등의 하드웨어와 iOS, iPadOS, macOS 등의 소프트웨어를 설계, 디자인하는 기업이다."

- id: 애플
  translation: "애플은 미국 캘리포니아의 아이폰, 아이패드, 애플 워치, 에어팟, 아이맥, 맥북, 맥 프로, 홈팟 등의 하드웨어와 iOS, iPadOS, macOS 등의 소프트웨어를 설계, 디자인하는 기업이다."

- id: iphone
  translation: "아이폰(영어: iPhone)은 미국 애플이 디자인하고 마케팅한 터치스크린 기반 휴대 전화 계열이다. 애플의 iOS 모바일 운영 체제를 사용한다. 1세대 아이폰은 애플의 공동 창립자 스티브 잡스가 2007년 1월 9일 발표하였고 제품은 2007년 6월 29일 출시되었다. 그 뒤로 애플은 해마다 새로운 아이폰 모델과 iOS 업데이트를 출시해왔다. 2018년 11월 1일 기준으로, 22억대 이상의 아이폰이 판매되었다."

- id: 아이폰
  translation: "아이폰(영어: iPhone)은 미국 애플이 디자인하고 마케팅한 터치스크린 기반 휴대 전화 계열이다. 애플의 iOS 모바일 운영 체제를 사용한다. 1세대 아이폰은 애플의 공동 창립자 스티브 잡스가 2007년 1월 9일 발표하였고 제품은 2007년 6월 29일 출시되었다. 그 뒤로 애플은 해마다 새로운 아이폰 모델과 iOS 업데이트를 출시해왔다. 2018년 11월 1일 기준으로, 22억대 이상의 아이폰이 판매되었다."

- id: ipad
  translation: "아이패드(영어: iPad)는 미국 애플사의 태블릿 컴퓨터 브랜드 및 시리즈이다. 9.7인치 LED 백라이트 IPS 디스플레이를 탑재하였으며, 아이폰과 같은 iOS를 기반으로 하여 아이폰에서 구동되는 거의 모든 응용 프로그램을 사용할 수 있을 뿐만 아니라 전자책과, 애플에서 개발한 업무용 프로그램인 아이워크(iWork) 등 보강된 기능들이 탑재된 것이 특징이다."

- id: 아이패드
  translation: "아이패드(영어: iPad)는 미국 애플사의 태블릿 컴퓨터 브랜드 및 시리즈이다. 9.7인치 LED 백라이트 IPS 디스플레이를 탑재하였으며, 아이폰과 같은 iOS를 기반으로 하여 아이폰에서 구동되는 거의 모든 응용 프로그램을 사용할 수 있을 뿐만 아니라 전자책과, 애플에서 개발한 업무용 프로그램인 아이워크(iWork) 등 보강된 기능들이 탑재된 것이 특징이다."

- id: applewatch
  translation: "애플 워치(영어: Apple Watch)은 애플이 판매하는 스마트워치로, 2014년 9월 9일에 미국 캘리포니아 쿠퍼티노 디앤자 단과대학 플린트센터에서 발표했다. 런칭 제품으로는 화면 1.5 인치 제품과 1.65 인치 제품으로 나뉘고, 이를 또 다시 애플 워치(Apple Watch), 애플 워치 스포츠(Apple Watch Sport), 애플 워치 에디션(Apple Watch Edition) 으로 나뉜다. 2015년 3월 9일 미국 샌프란시스코 에바 부에나 센터에서 열린 공식 행사에서 애플 워치에 대한 정보를 추가적으로 발표했다. 2015년 4월 24일에 1차 출시국에서 판매했으며, 대한민국의 애플워치 출시일은 6월 26일이었다."

- id: 애플워치
  translation: "애플 워치(영어: Apple Watch)은 애플이 판매하는 스마트워치로, 2014년 9월 9일에 미국 캘리포니아 쿠퍼티노 디앤자 단과대학 플린트센터에서 발표했다. 런칭 제품으로는 화면 1.5 인치 제품과 1.65 인치 제품으로 나뉘고, 이를 또 다시 애플 워치(Apple Watch), 애플 워치 스포츠(Apple Watch Sport), 애플 워치 에디션(Apple Watch Edition) 으로 나뉜다. 2015년 3월 9일 미국 샌프란시스코 에바 부에나 센터에서 열린 공식 행사에서 애플 워치에 대한 정보를 추가적으로 발표했다. 2015년 4월 24일에 1차 출시국에서 판매했으며, 대한민국의 애플워치 출시일은 6월 26일이었다."

- id: macintosh
  translation: "매킨토시(영어: Macintosh, 문화어: 메킨토쉬) 혹은 줄여서 맥(영어: Mac)은 애플이 디자인, 개발, 판매하는 개인용 컴퓨터의 제품 이름이다. 1984년 1월 24일 처음 출시된 매킨토시는 당시 유행하던 명령 줄 인터페이스 대신 그래픽 사용자 인터페이스(GUI)와 마우스를 채용해 상업적으로 성공한 최초의 개인용 컴퓨터였다. 하지만 현재 전 세계 대부분의 사람들은 IBM PC 호환기종(Microsoft사의 'Windows' 소프트웨어가 설치된 PC)을 쓰고 있다. 매킨토시는 값이 비쌌으며 내부를 공개 하지 않았기 때문이다."

- id: 매킨토시
  translation: "매킨토시(영어: Macintosh, 문화어: 메킨토쉬) 혹은 줄여서 맥(영어: Mac)은 애플이 디자인, 개발, 판매하는 개인용 컴퓨터의 제품 이름이다. 1984년 1월 24일 처음 출시된 매킨토시는 당시 유행하던 명령 줄 인터페이스 대신 그래픽 사용자 인터페이스(GUI)와 마우스를 채용해 상업적으로 성공한 최초의 개인용 컴퓨터였다. 하지만 현재 전 세계 대부분의 사람들은 IBM PC 호환기종(Microsoft사의 'Windows' 소프트웨어가 설치된 PC)을 쓰고 있다. 매킨토시는 값이 비쌌으며 내부를 공개 하지 않았기 때문이다."

- id: orm
  translation: 'ORM(Object Relational Mapping) 객체 관계 매핑은 데이터베이스와 객체 지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법이다. 객체 지향 언어에서 사용할 수 있는 "가상" 객체 데이터베이스를 구축하는 방법이다.'

- id: 오알엠
  translation: 'ORM(Object Relational Mapping) 객체 관계 매핑은 데이터베이스와 객체 지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법이다. 객체 지향 언어에서 사용할 수 있는 "가상" 객체 데이터베이스를 구축하는 방법이다.'

- id: jamstack
  translation: "JAM stack 은 Javascript, Api, Markup Stack 의 약자이다. 약자에서 알수 있듯 Javascript 와 API 그리고 Markup(HTML) 만으로 이루어진 웹의 구성을 이야기하는 것인데, 우리가 알고 있는 SPA 과는 비슷하지만 다르다."

- id: 잼스택
  translation: "JAM stack 은 Javascript, Api, Markup Stack 의 약자이다. 약자에서 알수 있듯 Javascript 와 API 그리고 Markup(HTML) 만으로 이루어진 웹의 구성을 이야기하는 것인데, 우리가 알고 있는 SPA 과는 비슷하지만 다르다."

- id: wordpress
  translation: "워드프레스는 세계 최대의 자유-오픈 소스 소프트웨어 저작물 관리 시스템이다. 2003년 매트 물렌웨그가 창립했다. PHP로 작성되었으며, MySQL 또는 마리아DB가 주로 사용된다. 워드프레스로 제작된 웹사이트의 시장 점유율이 전세계 웹사이트의 42%를 돌파했다."

- id: 워드프레스
  translation: "워드프레스는 세계 최대의 자유-오픈 소스 소프트웨어 저작물 관리 시스템이다. 2003년 매트 물렌웨그가 창립했다. PHP로 작성되었으며, MySQL 또는 마리아DB가 주로 사용된다. 워드프레스로 제작된 웹사이트의 시장 점유율이 전세계 웹사이트의 42%를 돌파했다."

- id: gatsby
  translation: "Gatsby.js(이하 gatsby)란 React기반으로 정적 페이지를 생성해주는 프레임워크이다."

- id: graphql
  translation: "그래프QL은 페이스북이 2012년에 개발하여 2015년에 공개적으로 발표된 데이터 질의어이다. 그래프QL은 REST 및 부속 웹서비스 아키텍처를 대체할 수 있다. 클라이언트는 필요한 데이터의 구조를 지정할 수 있으며, 서버는 정확히 동일한 구조로 데이터를 반환한다."

- id: 그래프큐엘
  translation: "그래프QL은 페이스북이 2012년에 개발하여 2015년에 공개적으로 발표된 데이터 질의어이다. 그래프QL은 REST 및 부속 웹서비스 아키텍처를 대체할 수 있다. 클라이언트는 필요한 데이터의 구조를 지정할 수 있으며, 서버는 정확히 동일한 구조로 데이터를 반환한다."

- id: apollo
  translation: "Apollo란 GraphQL의 클라이언트 라이브러리 중 하나로 GraphQL을 사용한다면 거의 필수적으로 사용하는 상태 관리 플랫폼이다. API 서버에서 데이터를 가져오기 위해 번거로운 네트워크단의 HTTP 요청을 신경 쓸 필요가 없어진다."

- id: 아폴로
  translation: "Apollo란 GraphQL의 클라이언트 라이브러리 중 하나로 GraphQL을 사용한다면 거의 필수적으로 사용하는 상태 관리 플랫폼이다. API 서버에서 데이터를 가져오기 위해 번거로운 네트워크단의 HTTP 요청을 신경 쓸 필요가 없어진다."

- id: relay
  translation: "Relay는 GraphQL 기반의 데이터 중심 React 애플리케이션을 구축하기위한 JavaScript 프레임워크이다. React의 컴포넌트는 각 컴포넌트마다 비동기적으로 렌더링되고 필요로하는 데이터의 구조가 천차만별이다. 만약, REST API로 데이터를 요청한다면, 서버는 각 컴포넌트를 위한 URI를 생성해야하고, 클라이언트는 필요한 데이터를 받기위해 N+1의 요청을 시도해야한다. 받은 데이터 마저도 일부만 사용하는 경우가 많다. 하지만, Relay는 미리 정의된 데이터 구조에서 쿼리를 통해 필요한 데이터만 탐색할 수 있게 해준다."

- id: 릴레이
  translation: "Relay는 GraphQL 기반의 데이터 중심 React 애플리케이션을 구축하기위한 JavaScript 프레임워크이다. React의 컴포넌트는 각 컴포넌트마다 비동기적으로 렌더링되고 필요로하는 데이터의 구조가 천차만별이다. 만약, REST API로 데이터를 요청한다면, 서버는 각 컴포넌트를 위한 URI를 생성해야하고, 클라이언트는 필요한 데이터를 받기위해 N+1의 요청을 시도해야한다. 받은 데이터 마저도 일부만 사용하는 경우가 많다. 하지만, Relay는 미리 정의된 데이터 구조에서 쿼리를 통해 필요한 데이터만 탐색할 수 있게 해준다."

- id: 오픈-소스
  translation: "오픈 소스 소프트웨어는 소스 코드를 공개해 누구나 특별한 제한 없이 그 코드를 보고 사용할 수 있는 오픈 소스 라이선스를 만족하는 소프트웨어를 말한다. 통상 간략하게 오픈 소스라고 말하기도 한다."

- id: open-source
  translation: "오픈 소스 소프트웨어는 소스 코드를 공개해 누구나 특별한 제한 없이 그 코드를 보고 사용할 수 있는 오픈 소스 라이선스를 만족하는 소프트웨어를 말한다. 통상 간략하게 오픈 소스라고 말하기도 한다."

- id: oss
  translation: "오픈 소스 소프트웨어는 소스 코드를 공개해 누구나 특별한 제한 없이 그 코드를 보고 사용할 수 있는 오픈 소스 라이선스를 만족하는 소프트웨어를 말한다. 통상 간략하게 오픈 소스라고 말하기도 한다."

- id: git
  translation: "깃은 컴퓨터 파일의 변경사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 분산 버전 관리 시스템이다. 또는 이러한 명령어를 가리킨다."

- id: 깃
  translation: "깃은 컴퓨터 파일의 변경사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 분산 버전 관리 시스템이다. 또는 이러한 명령어를 가리킨다."

- id: github
  translation: "깃허브는 분산 버전 관리 툴인 깃 저장소 호스팅을 지원하는 웹 서비스이다. 루비 온 레일스로 작성되었다. GitHub는 영리적인 서비스와 오픈소스를 위한 무상 서비스를 모두 제공한다."

- id: 깃허브
  translation: "깃허브는 분산 버전 관리 툴인 깃 저장소 호스팅을 지원하는 웹 서비스이다. 루비 온 레일스로 작성되었다. GitHub는 영리적인 서비스와 오픈소스를 위한 무상 서비스를 모두 제공한다."

- id: gitlab
  translation: "깃랩은 깃랩 사가 개발한 깃 저장소 및 CI/CD, 이슈 추적, 보안성 테스트 등의 기능을 갖춘 웹 기반의 데브옵스 플랫폼으로써, 오픈 소스 라이선스 및 사유 소프트웨어 라이선스를 사용한다."

- id: 깃랩
  translation: "깃랩은 깃랩 사가 개발한 깃 저장소 및 CI/CD, 이슈 추적, 보안성 테스트 등의 기능을 갖춘 웹 기반의 데브옵스 플랫폼으로써, 오픈 소스 라이선스 및 사유 소프트웨어 라이선스를 사용한다."

- id: sourcetree
  translation: "소스트리는 GitHub Desktop과 더불어 많은 사람들이 사용중인 git gui로, git 관련된 작업을 보기 편한 UI로 제공한다는 장점이 있습니다."

- id: 소스트리
  translation: "소스트리는 GitHub Desktop과 더불어 많은 사람들이 사용중인 git gui로, git 관련된 작업을 보기 편한 UI로 제공한다는 장점이 있습니다."

- id: spring
  translation: "스프링 프레임워크는 자바 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크로서 간단히 스프링이라고도 한다. 동적인 웹 사이트를 개발하기 위한 여러 가지 서비스를 제공하고 있다."

- id: 스프링
  translation: "스프링 프레임워크는 자바 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크로서 간단히 스프링이라고도 한다. 동적인 웹 사이트를 개발하기 위한 여러 가지 서비스를 제공하고 있다."

- id: spring-boot
  translation: "스프링 프레임워크 기반 프로젝트를 어려운 설정이나, WAS에 대한 설정 없이 바로 개발에 들어갈 수 있도록 만든 프레임워크이다."

- id: 스프링-부트
  translation: "스프링 프레임워크 기반 프로젝트를 어려운 설정이나, WAS에 대한 설정 없이 바로 개발에 들어갈 수 있도록 만든 프레임워크이다."

- id: kafka
  translation: "Apache Kafka는 실시간으로 기록 스트림을 게시, 구독, 저장 및 처리할 수 있는 분산 데이터 스트리밍 플랫폼입니다. 이는 여러 소스에서 데이터 스트림을 처리하고 여러 사용자에게 전달하도록 설계되었습니다. 간단히 말해 A지점에서 B지점까지 이동하는 것뿐만 아니라 A지점에서 Z지점을 비롯해 필요한 모든 곳에서 대규모 데이터를 동시에 이동할 수 있습니다."

- id: 카프카
  translation: "Apache Kafka는 실시간으로 기록 스트림을 게시, 구독, 저장 및 처리할 수 있는 분산 데이터 스트리밍 플랫폼입니다. 이는 여러 소스에서 데이터 스트림을 처리하고 여러 사용자에게 전달하도록 설계되었습니다. 간단히 말해 A지점에서 B지점까지 이동하는 것뿐만 아니라 A지점에서 Z지점을 비롯해 필요한 모든 곳에서 대규모 데이터를 동시에 이동할 수 있습니다."

- id: docker
  translation: "도커는 리눅스의 응용 프로그램들을 프로세스 격리 기술들을 사용해 컨테이너로 실행하고 관리하는 오픈 소스 프로젝트이다. 도커 웹 페이지의 기능을 인용하면 다음과 같다: 도커 컨테이너는 일종의 소프트웨어를 소프트웨어의 실행에 필요한 모든 것을 포함하는 완전한 파일 시스템 안에 감싼다."

- id: 도커
  translation: "도커는 리눅스의 응용 프로그램들을 프로세스 격리 기술들을 사용해 컨테이너로 실행하고 관리하는 오픈 소스 프로젝트이다. 도커 웹 페이지의 기능을 인용하면 다음과 같다: 도커 컨테이너는 일종의 소프트웨어를 소프트웨어의 실행에 필요한 모든 것을 포함하는 완전한 파일 시스템 안에 감싼다."

- id: redis
  translation: '레디스는 Remote Dictionary Server의 약자로서, "키-값" 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템이다. 2009년 살바토르 산필리포가 처음 개발했다. 2015년부터 Redis Labs가 지원하고 있다.'

- id: 레디스
  translation: '레디스는 Remote Dictionary Server의 약자로서, "키-값" 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템이다. 2009년 살바토르 산필리포가 처음 개발했다. 2015년부터 Redis Labs가 지원하고 있다.'

- id: reactivex
  translation: "반응형 프로그래밍이란 데이터의 흐름 과 변화의 전파에 중점을 둔 선언적 프로그래밍 패러다임. 정적 또는 동적인 데이터 흐름 을 쉽게 표현할 수 있으며, 데이터 흐름을 통해 연관된 실행 모델이 자동으로 변화를 전파할 수 있는 것을 의미함. -by Elonwiki"

- id: rx
  translation: "반응형 프로그래밍이란 데이터의 흐름 과 변화의 전파에 중점을 둔 선언적 프로그래밍 패러다임. 정적 또는 동적인 데이터 흐름 을 쉽게 표현할 수 있으며, 데이터 흐름을 통해 연관된 실행 모델이 자동으로 변화를 전파할 수 있는 것을 의미함. -by Elonwiki"

- id: devops
  translation: "데브옵스는 소프트웨어의 개발과 운영의 합성어로서, 소프트웨어 개발자와 정보기술 전문가 간의 소통, 협업 및 통합을 강조하는 개발 환경이나 문화를 말한다."

- id: 데브옵스
  translation: "데브옵스는 소프트웨어의 개발과 운영의 합성어로서, 소프트웨어 개발자와 정보기술 전문가 간의 소통, 협업 및 통합을 강조하는 개발 환경이나 문화를 말한다."

- id: ruby
  translation: "루비는 마츠모토 유키히로가 개발한 동적 객체 지향 스크립트 프로그래밍 언어이다. 루비는 순수 객체 지향 언어라, 정수나 문자열 등을 포함한 데이터 형식 등 모든 것이 객체이다."

- id: 루비
  translation: "루비는 마츠모토 유키히로가 개발한 동적 객체 지향 스크립트 프로그래밍 언어이다. 루비는 순수 객체 지향 언어라, 정수나 문자열 등을 포함한 데이터 형식 등 모든 것이 객체이다."

- id: node.js
  translation: "Node.js는 확장성 있는 네트워크 애플리케이션 개발에 사용되는 소프트웨어 플랫폼이다. 작성 언어로 자바스크립트를 활용하며 논블로킹 I/O와 단일 스레드 이벤트 루프를 통한 높은 처리 성능을 가지고 있다."

- id: 노드
  translation: "Node.js는 확장성 있는 네트워크 애플리케이션 개발에 사용되는 소프트웨어 플랫폼이다. 작성 언어로 자바스크립트를 활용하며 논블로킹 I/O와 단일 스레드 이벤트 루프를 통한 높은 처리 성능을 가지고 있다."

- id: babel
  translation: "Babel은 ECMAScript 2015+ 코드를 이전 JavaScript 엔진에서 실행할 수 있는 이전 버전과 호환되는 JavaScript 버전으로 변환하는 데 주로 사용되는 무료 오픈 소스 JavaScript 트랜스컴파일러입니다."

- id: 바벨
  translation: "Babel은 ECMAScript 2015+ 코드를 이전 JavaScript 엔진에서 실행할 수 있는 이전 버전과 호환되는 JavaScript 버전으로 변환하는 데 주로 사용되는 무료 오픈 소스 JavaScript 트랜스컴파일러입니다."

- id: netlify
  translation: "Netlify는 웹 애플리케이션 및 정적 웹사이트를 위한 호스팅 및 서버리스 백엔드 서비스를 제공하는 샌프란시스코 기반 클라우드 컴퓨팅 회사입니다."

- id: 네트리파이
  translation: "Netlify는 웹 애플리케이션 및 정적 웹사이트를 위한 호스팅 및 서버리스 백엔드 서비스를 제공하는 샌프란시스코 기반 클라우드 컴퓨팅 회사입니다."

- id: objective-c
  translation: "오브젝티브-C는 C 프로그래밍 언어에 스몰토크 스타일의 메시지 구문을 추가한 객체 지향 언어이다. 현재, 이 언어는 애플의 매킨토시의 운영 체제인 OS X과 아이폰의 운영 체제인 iOS에서 사용되고 있다."

- id: 오브젝티브-c
  translation: "오브젝티브-C는 C 프로그래밍 언어에 스몰토크 스타일의 메시지 구문을 추가한 객체 지향 언어이다. 현재, 이 언어는 애플의 매킨토시의 운영 체제인 OS X과 아이폰의 운영 체제인 iOS에서 사용되고 있다."

- id: swift
  translation: "스위프트는 애플의 iOS와 macOS를 위한 프로그래밍 언어로 2014년 6월 2일 애플 세계 개발자 회의에서 처음 소개되었다. 스위프트 언어의 문법은 파이썬 언어라고 발표 초창기에 알려 졌었다. ​기존의 애플 운영체제용 언어인 오브젝티브-C와 함께 공존할 목적으로 만들어졌다."

- id: 스위프트
  translation: "스위프트는 애플의 iOS와 macOS를 위한 프로그래밍 언어로 2014년 6월 2일 애플 세계 개발자 회의에서 처음 소개되었다. 스위프트 언어의 문법은 파이썬 언어라고 발표 초창기에 알려 졌었다. ​기존의 애플 운영체제용 언어인 오브젝티브-C와 함께 공존할 목적으로 만들어졌다."

- id: rust
  translation: '러스트는 모질라 리서치에서 개발한 범용 프로그래밍 언어이다. "안전하고, 병렬적이며, 실용적인" 언어로 디자인되었으며, 순수 함수형 프로그래밍, 액터 기반 병렬 프로그래밍, 명령형 프로그래밍, 객체 지향 프로그래밍 스타일을 지원한다.'

- id: 러스트
  translation: '러스트는 모질라 리서치에서 개발한 범용 프로그래밍 언어이다. "안전하고, 병렬적이며, 실용적인" 언어로 디자인되었으며, 순수 함수형 프로그래밍, 액터 기반 병렬 프로그래밍, 명령형 프로그래밍, 객체 지향 프로그래밍 스타일을 지원한다.'

- id: tailwind
  translation: "Tailwind CSS는 유틸리티 퍼스트(Utility-first)를 지향하는 CSS 프레임워크다. CSS를 작성하는 방법론 중 하나인 BEM은 마크업을 컴포넌트 단위로 구분하고 상태에 따라 스타일을 변경하는 식으로 재활용할 수 있도록 한다."

- id: 테일윈드
  translation: "Tailwind CSS는 유틸리티 퍼스트(Utility-first)를 지향하는 CSS 프레임워크다. CSS를 작성하는 방법론 중 하나인 BEM은 마크업을 컴포넌트 단위로 구분하고 상태에 따라 스타일을 변경하는 식으로 재활용할 수 있도록 한다."

- id: emotion
  translation: "emotion.js는 CSS-in-JS의 종류 중 하나로 JavaScript 안에서 스타일을 작성할 수 있게 해준다. emotion.js는 주로 Framework Agnostic(*쉽게 말하면 프레임워크를 사용하지 않는 것)과 React 두 가지 방식으로 사용된다."

- id: 이모션
  translation: "emotion.js는 CSS-in-JS의 종류 중 하나로 JavaScript 안에서 스타일을 작성할 수 있게 해준다. emotion.js는 주로 Framework Agnostic(*쉽게 말하면 프레임워크를 사용하지 않는 것)과 React 두 가지 방식으로 사용된다."

- id: rescript
  translation: "ReScript는 JavaScript를 사랑하지는 않지만 자바스크립트의 중요성을 인정하는 사람들을 위한 언어이다. ReScript는 JavaScript처럼 보이며 JavaScript와 함께 동작하며, 브라우저와 Node.js상에서 직접 실행할 수 있는 언어이며 ReScript를 컴파일하게 되면 읽기 쉬우며 성능이 뛰어난 JavaScript 코드로 컴파일이 된다."

- id: 리스크립트
  translation: "ReScript는 JavaScript를 사랑하지는 않지만 자바스크립트의 중요성을 인정하는 사람들을 위한 언어이다. ReScript는 JavaScript처럼 보이며 JavaScript와 함께 동작하며, 브라우저와 Node.js상에서 직접 실행할 수 있는 언어이며 ReScript를 컴파일하게 되면 읽기 쉬우며 성능이 뛰어난 JavaScript 코드로 컴파일이 된다."

- id: nest.js
  translation: "Nest (NestJS)는 효율적이고 확장 가능한 Node.js 서버측 애플리케이션을 구축하기 위한 프레임워크입니다. 프로그레시브 자바스크립트를 사용하고 TypeScript로 빌드되고 완벽하게 지원하며(하지만 여전히 개발자가 순수 자바스크립트로 코딩할 수 있음), OOP (객체 지향 프로그래밍 Object Oriented Programming), FP (함수형 프로그래밍 Functional Programming) 및 FRP (함수형 반응형 프로그래밍 Functional Reactive Programming) 요소를 결합합니다."

- id: 네스트
  translation: "Nest (NestJS)는 효율적이고 확장 가능한 Node.js 서버측 애플리케이션을 구축하기 위한 프레임워크입니다. 프로그레시브 자바스크립트를 사용하고 TypeScript로 빌드되고 완벽하게 지원하며(하지만 여전히 개발자가 순수 자바스크립트로 코딩할 수 있음), OOP (객체 지향 프로그래밍 Object Oriented Programming), FP (함수형 프로그래밍 Functional Programming) 및 FRP (함수형 반응형 프로그래밍 Functional Reactive Programming) 요소를 결합합니다."

- id: next.js
  translation: "Next.js는 Node.js를 기반으로 구축된 오픈 소스 개발 프레임워크로, 서버 측 렌더링 및 정적 웹사이트 생성과 같은 React 기반 웹 애플리케이션 기능을 가능하게 합니다."

- id: 넥스트
  translation: "Next.js는 Node.js를 기반으로 구축된 오픈 소스 개발 프레임워크로, 서버 측 렌더링 및 정적 웹사이트 생성과 같은 React 기반 웹 애플리케이션 기능을 가능하게 합니다."

- id: nuxt.js
  translation: "Nuxt.js는 Vue.js, Node.js, Webpack 및 Babel.js를 기반으로하는 무료 오픈 소스 웹 애플리케이션 프레임 워크입니다. Nuxt는 React.js를 기반으로하는 비슷한 목적의 프레임 워크 인 Next.js에서 영감을 받았습니다."

- id: 넉스트
  translation: "Nuxt.js는 Vue.js, Node.js, Webpack 및 Babel.js를 기반으로하는 무료 오픈 소스 웹 애플리케이션 프레임 워크입니다. Nuxt는 React.js를 기반으로하는 비슷한 목적의 프레임 워크 인 Next.js에서 영감을 받았습니다."

- id: ssr
  translation: "SSR (Server Side Rendering)은 서버에서 사용자에게 보여줄 페이지를 모두 구성하여 사용자에게 페이지를 보여주는 방식이다. JSP/Servlet의 아키텍처에서 이 방식을 사용했다."

- id: csr
  translation: "CSR (Client Side Rendering)은 브라우저에서 애플리케이션을 렌더링한다. 일반적으로 DOM을 사용한다."

- id: spa
  translation: "spa (Single Page Application)은 서버로부터 완전한 새로운 페이지를 불러오지 않고 현재의 페이지를 동적으로 다시 작성함으로써 사용자와 소통하는 웹 애플리케이션이나 웹사이트를 말한다."

- id: ajax
  translation: "Ajax(Asynchronous JavaScript and XML, 에이잭스)는 비동기적인 웹 애플리케이션의 제작을 위해 아래와 같은 조합을 이용하는 웹 개발 기법이다."

- id: dom
  translation: "문서 객체 모델은 XML, HTML 문서의 각 항목을 계층으로 표현하여 생성, 변형, 삭제할 수 있도록 돕는 인터페이스이다. W3C의 표준이다. W3C의 표준화한 API들의 기반이 된다. DOM은 HTML 문서의 요소를 제어하기 위해 웹 브라우저에서 처음 지원되었다."

- id: json
  translation: 'JSON은 속성-값 쌍 또는 "키-값 쌍"으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷이다. 비동기 브라우저/서버 통신 을 위해, 넓게는 XML을 대체하는 주요 데이터 포맷이다.'

- id: xml
  translation: "XML은 W3C에서 개발된, 다른 특수한 목적을 갖는 마크업 언어를 만드는데 사용하도록 권장하는 다목적 마크업 언어이다. XML은 SGML의 단순화된 부분집합으로, 다른 많은 종류의 데이터를 기술하는 데 사용할 수 있다."

- id: yaml
  translation: "YAML은 XML, C, 파이썬, 펄, RFC2822에서 정의된 e-mail 양식에서 개념을 얻어 만들어진 '사람이 쉽게 읽을 수 있는' 데이터 직렬화 양식이다. 2001년에 클라크 에반스가 고안했고, Ingy dot Net 및 Oren Ben-Kiki와 함께 디자인했다."

- id: yml
  translation: "YAML은 XML, C, 파이썬, 펄, RFC2822에서 정의된 e-mail 양식에서 개념을 얻어 만들어진 '사람이 쉽게 읽을 수 있는' 데이터 직렬화 양식이다. 2001년에 클라크 에반스가 고안했고, Ingy dot Net 및 Oren Ben-Kiki와 함께 디자인했다."

- id: w3c
  translation: "W3C는 월드 와이드 웹을 위한 표준을 개발하고 장려하는 조직으로 팀 버너스 리를 중심으로 1994년 10월에 설립되었다. W3C는 회원기구, 정직원, 공공기관이 협력하여 웹 표준을 개발하는 국제 컨소시엄이다."

- id: www
  translation: "월드 와이드 웹 (World Wide Web, WWW, W3)은 인터넷에 연결된 컴퓨터를 통해 사람들이 정보를 공유할 수 있는 전 세계적인 정보 공간을 말한다. 간단히 웹이라 부르는 경우가 많다. 이 용어는 인터넷과 동의어로 쓰이는 경우가 많으나 엄격히 말해 서로 다른 개념이다."

- id: jvm
  translation: "자바 가상 머신은 자바 바이트코드를 실행할 수 있는 주체이다. 일반적으로 인터프리터나 JIT 컴파일 방식으로 다른 컴퓨터 위에서 바이트코드를 실행할 수 있도록 구현되나 jop 자바 프로세서처럼 하드웨어와 소프트웨어를 혼합해 구현하는 경우도 있다."

- id: design-pattern
  translation: "소프트웨어 디자인 패턴은 소프트웨어 공학의 소프트웨어 디자인에서 특정 문맥에서 공통적으로 발생하는 문제에 대해 재사용 가능한 해결책이다. 소스나 기계 코드로 바로 전환될수 있는 완성된 디자인은 아니며, 다른 상황에 맞게 사용될 수 있는 문제들을 해결하는데에 쓰이는 서술이나 템플릿이다."

- id: 디자인-패턴
  translation: "소프트웨어 디자인 패턴은 소프트웨어 공학의 소프트웨어 디자인에서 특정 문맥에서 공통적으로 발생하는 문제에 대해 재사용 가능한 해결책이다. 소스나 기계 코드로 바로 전환될수 있는 완성된 디자인은 아니며, 다른 상황에 맞게 사용될 수 있는 문제들을 해결하는데에 쓰이는 서술이나 템플릿이다."

- id: data-structure
  translation: "자료구조는 컴퓨터 과학에서 효율적인 접근 및 수정을 가능케 하는 자료의 조직, 관리, 저장을 의미한다. 더 정확히 말해, 자료 구조는 데이터 값의 모임, 또 데이터 간의 관계, 그리고 데이터에 적용할 수 있는 함수나 명령을 의미한다."

- id: 자료구조
  translation: "자료구조는 컴퓨터 과학에서 효율적인 접근 및 수정을 가능케 하는 자료의 조직, 관리, 저장을 의미한다. 더 정확히 말해, 자료 구조는 데이터 값의 모임, 또 데이터 간의 관계, 그리고 데이터에 적용할 수 있는 함수나 명령을 의미한다."

- id: til
  translation: "Today I Learned의 준말로서, 오늘 배운 것들을 기록하는 것을 의미합니다."

- id: programmers
  translation: "프로그래머스. 개발자 채용을 위한 코딩 테스트 및 채용 중개 플랫폼."

- id: 프로그래머스
  translation: "프로그래머스. 개발자 채용을 위한 코딩 테스트 및 채용 중개 플랫폼."

- id: aws
  translation: "아마존 웹 서비스는 아마존닷컴의 클라우드 컴퓨팅 사업부이다. 아마존 웹 서비스는 다른 웹 사이트나 클라이언트측 응용 프로그램에 대해 온라인 서비스를 제공하고 있다."

- id: sql
  translation: "SQL는 관계형 데이터베이스 관리 시스템의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어이다. 관계형 데이터베이스 관리 시스템에서 자료의 검색과 관리, 데이터베이스 스키마 생성과 수정, 데이터베이스 객체 접근 조정 관리를 위해 고안되었다."

- id: db
  translation: "데이터베이스는 여러 사람이 공유하여 사용할 목적으로 체계화해 통합, 관리하는 데이터의 집합이다. 작성된 목록으로써 여러 응용 시스템들의 통합된 정보들을 저장하여 운영할 수 있는 공용 데이터들의 묶음이다. 데이터베이스에 속해있는 모델은 다양하다."

- id: 데이터베이스
  translation: "데이터베이스는 여러 사람이 공유하여 사용할 목적으로 체계화해 통합, 관리하는 데이터의 집합이다. 작성된 목록으로써 여러 응용 시스템들의 통합된 정보들을 저장하여 운영할 수 있는 공용 데이터들의 묶음이다. 데이터베이스에 속해있는 모델은 다양하다."

- id: database
  translation: "데이터베이스는 여러 사람이 공유하여 사용할 목적으로 체계화해 통합, 관리하는 데이터의 집합이다. 작성된 목록으로써 여러 응용 시스템들의 통합된 정보들을 저장하여 운영할 수 있는 공용 데이터들의 묶음이다. 데이터베이스에 속해있는 모델은 다양하다."

- id: jquery
  translation: "jQuery는 HTML의 클라이언트 사이드 조작을 단순화 하도록 설계된 크로스 플랫폼의 자바스크립트 라이브러리다. 존 레식이 2006년 뉴욕 시 바캠프에서 공식적으로 소개하였다."

- id: 제이쿼리
  translation: "jQuery는 HTML의 클라이언트 사이드 조작을 단순화 하도록 설계된 크로스 플랫폼의 자바스크립트 라이브러리다. 존 레식이 2006년 뉴욕 시 바캠프에서 공식적으로 소개하였다."

- id: jsp
  translation: "자바 서버 페이지는 HTML내에 자바 코드를 삽입하여 웹 서버에서 동적으로 웹 페이지를 생성하여 웹 브라우저에 돌려주는 서버 사이드 스크립트 언어이다. Java EE 스펙 중 일부로 웹 애플리케이션 서버에서 동작한다."

- id: apache
  translation: "아파치 HTTP 서버는 아파치 소프트웨어 재단에서 관리하는 오픈 소스, 크로스 플랫폼 HTTP 웹 서버 소프트웨어다. BSD, 리눅스 등 유닉스 계열 뿐 아니라 마이크로소프트 윈도우나 노벨 넷웨어 같은 기종에서도 무료로 운용할 수 있다."

- id: 아파치
  translation: "아파치 HTTP 서버는 아파치 소프트웨어 재단에서 관리하는 오픈 소스, 크로스 플랫폼 HTTP 웹 서버 소프트웨어다. BSD, 리눅스 등 유닉스 계열 뿐 아니라 마이크로소프트 윈도우나 노벨 넷웨어 같은 기종에서도 무료로 운용할 수 있다."

- id: tomcat
  translation: "아파치 톰캣은 아파치 소프트웨어 재단에서 개발한 서블릿 컨테이너만 있는 웹 애플리케이션 서버이다. 톰캣은 웹 서버와 연동하여 실행할 수 있는 자바 환경을 제공하여 자바서버 페이지와 자바 서블릿이 실행할 수 있는 환경을 제공하고 있다."

- id: 톰캣
  translation: "아파치 톰캣은 아파치 소프트웨어 재단에서 개발한 서블릿 컨테이너만 있는 웹 애플리케이션 서버이다. 톰캣은 웹 서버와 연동하여 실행할 수 있는 자바 환경을 제공하여 자바서버 페이지와 자바 서블릿이 실행할 수 있는 환경을 제공하고 있다."

- id: nginx
  translation: "Nginx는 웹 서버 소프트웨어로, 가벼움과 높은 성능을 목표로 한다. 웹 서버, 리버스 프록시 및 메일 프록시 기능을 가진다."

- id: redhat
  translation: "레드햇은 1993년에 창립된 리눅스 배포판 제작회사로, 레드햇 리눅스를 제작했다. 레드햇은 오픈 소스를 비즈니스로 전개하면서 소프트웨어를 무료로 공급하고 지원을 유료로 하는 비즈니스 모델을 기본으로 하였지만, 최근에는 고도화된 소프트웨어를 유료로 판매하는 비즈니스도 시작하고 있다."

- id: 레드햇
  translation: "레드햇은 1993년에 창립된 리눅스 배포판 제작회사로, 레드햇 리눅스를 제작했다. 레드햇은 오픈 소스를 비즈니스로 전개하면서 소프트웨어를 무료로 공급하고 지원을 유료로 하는 비즈니스 모델을 기본으로 하였지만, 최근에는 고도화된 소프트웨어를 유료로 판매하는 비즈니스도 시작하고 있다."

- id: nosql
  translation: "NoSQL 데이터베이스는 전통적인 관계형 데이터베이스 보다 덜 제한적인 일관성 모델을 이용하는 데이터의 저장 및 검색을 위한 매커니즘을 제공한다. 이러한 접근에 대한 동기에는 디자인의 단순화, 수평적 확장성, 세세한 통제를 포함한다."

- id: aws-ec2
  translation: "아마존 일래스틱 컴퓨트 클라우드는 아마존닷컴의 클라우드 컴퓨팅 플랫폼 아마존 웹 서비스의 중앙부를 이루며, 사용자가 가상 컴퓨터를 임대 받아 그 위에 자신만의 컴퓨터 애플리케이션들을 실행할 수 있게 한다."

- id: ec2
  translation: "아마존 일래스틱 컴퓨트 클라우드는 아마존닷컴의 클라우드 컴퓨팅 플랫폼 아마존 웹 서비스의 중앙부를 이루며, 사용자가 가상 컴퓨터를 임대 받아 그 위에 자신만의 컴퓨터 애플리케이션들을 실행할 수 있게 한다."

- id: aws-lambda
  translation: "AWS Lambda는 Amazon Web Services의 일부로 Amazon에서 제공하는 이벤트 중심의 서버리스 컴퓨팅 플랫폼입니다. 이벤트에 대한 응답으로 코드를 실행하고 해당 코드에 필요한 컴퓨팅 리소스를 자동으로 관리하는 컴퓨팅 서비스입니다."

- id: aws-s3
  translation: "아마존 S3는 아마존 웹 서비스에서 제공하는 온라인 스토리지 웹 서비스이다. 아마존 S3는 웹 서비스 인터페이스를 통해 스토리지를 제공한다. 아마존이 S3를 출시하고 최초로 공개적으로 웹서비스를 이용할 수 있게 된 것은 2006년 3월 미국 그리고 유럽은 2007년 11월이다."

- id: s3
  translation: "아마존 S3는 아마존 웹 서비스에서 제공하는 온라인 스토리지 웹 서비스이다. 아마존 S3는 웹 서비스 인터페이스를 통해 스토리지를 제공한다. 아마존이 S3를 출시하고 최초로 공개적으로 웹서비스를 이용할 수 있게 된 것은 2006년 3월 미국 그리고 유럽은 2007년 11월이다."

- id: 엘라스틱서치
  translation: "엘라스틱서치는 루씬 기반의 검색 엔진이다. HTTP 웹 인터페이스와 스키마에서 자유로운 JSON 문서와 함께 분산 멀티테넌트 지원 전문 검색 엔진을 제공한다. 엘라스틱서치는 자바로 개발되어 있으며 아파치 라이선스 조항에 의거하여 오픈 소스로 출시되어 있다."

- id: elasticsearch
  translation: "엘라스틱서치는 루씬 기반의 검색 엔진이다. HTTP 웹 인터페이스와 스키마에서 자유로운 JSON 문서와 함께 분산 멀티테넌트 지원 전문 검색 엔진을 제공한다. 엘라스틱서치  는 자바로 개발되어 있으며 아파치 라이선스 조항에 의거하여 오픈 소스로 출시되어 있다."

- id: crud
  translation: "CRUD는 대부분의 컴퓨터 소프트웨어가 가지는 기본적인 데이터 처리 기능인 Create, Read, Update, Delete를 묶어서 일컫는 말이다. 사용자 인터페이스가 갖추어야 할 기능을 가리키는 용어로서도 사용된다. CRUD 대신에 다음과 같은 유사용어가 사용되기도 한다."

- id: vcs
  translation: "버전 관리, 소스 관리, 소스 코드 관리란 동일한 정보에 대한 여러 버전을 관리하는 것을 말한다. 공학과 소프트웨어 개발에서 팀 단위로 개발 중인 소스 코드나, 청사진 같은 설계도 등의 디지털 문서를 관리하는데 사용된다."

- id: hudson
  translation: "허드슨은 아파치 톰캣이나 글래스피시 애플리케이션 서버와 같은 서블릿 컨테이너에서 실행되는, 자바로 작성된 지속적 통합 도구이다."

- id: 허드슨
  translation: "허드슨은 아파치 톰캣이나 글래스피시 애플리케이션 서버와 같은 서블릿 컨테이너에서 실행되는, 자바로 작성된 지속적 통합 도구이다."

- id: jenkins
  translation: "젠킨스는 소프트웨어 개발 시 지속적 통합 서비스를 제공하는 툴이다. 다수의 개발자들이 하나의 프로그램을 개발할 때 버전 충돌을 방지하기 위해 각자 작업한 내용을 공유 영역에 있는 Git등의 저장소에 빈번히 업로드함으로써 지속적 통합이 가능하도록 해 준다. MIT 라이선스를 따른다."

- id: 젠킨스
  translation: "젠킨스는 소프트웨어 개발 시 지속적 통합 서비스를 제공하는 툴이다. 다수의 개발자들이 하나의 프로그램을 개발할 때 버전 충돌을 방지하기 위해 각자 작업한 내용을 공유 영역에 있는 Git등의 저장소에 빈번히 업로드함으로써 지속적 통합이 가능하도록 해 준다. MIT 라이선스를 따른다."

- id: github-actions
  translation: "Github Actions이란 Github에서 제공하는 워크플로우(workflow)를 자동화하도록 도와주는 도구이다. 테스트, 빌드, 배포 등의 다양한 작업들을 자동화하여 처리한다."

- id: ci/cd
  translation: "소프트웨어 엔지니어링에서 CI/CD 또는 CICD는 지속적 통합과 지속적 전달 또는 지속적 배포가 결합된 방식입니다. CI/CD는 애플리케이션 구축, 테스트 및 배포에 자동화를 적용하여 개발 및 운영 활동과 팀 간의 격차를 해소합니다."

- id: circleci
  translation: "CircleCI (Continuous integration)는 협업 시 파일의 충돌이나 에러가 날 수 있는 상황에 대하여 Git과 연동하여 Push 진행시 자동으로 빌드(테스트), 배포를 하는 파이프라인을 구축할 수 있습니다."

- id: architect
  translation: "소프트웨어 아키텍트는 전문가로 간주되는 소프트웨어 개발자로서, 고수준의 설계적 결정을 수행하고 소프트웨어 코딩 표준, 도구, 플랫폼을 포함한 기술 표준을 지시한다."

- id: 아키텍트
  translation: "소프트웨어 아키텍트는 전문가로 간주되는 소프트웨어 개발자로서, 고수준의 설계적 결정을 수행하고 소프트웨어 코딩 표준, 도구, 플랫폼을 포함한 기술 표준을 지시한다."

- id: effective-java-3/e
  translation: "자바 6 출시 직후 출간된 『이펙티브 자바 2판』 이후로 자바는 커다란 변화를 겪었다. 그래서 졸트상에 빛나는 이 책도 자바 언어와 라이브러리의 최신 기능을 십분 활용하도록 내용 전반을 철저히 다시 썼다. 모던 자바가 여러 패러다임을 지원하기 시작하면서 자바 개발자들에게는 구체적인 모범 사례가 더욱 절실해졌고, 관련 조언을 이 책에 담아낸 것이다. 이번 3판에는 자바 7, 8, 9에서 자바 언어와 라이브러리에 추가된 특성들을 녹여냈다. 특히 그동안 객체 지향에 치중하던 자바에 새로 도입된 함수형 프로그래밍 요소도 자세히 알아본다. 람다(lambda)와 스트림(stream)만을 다룬 장을 포함하여 새로운 아이템도 많이 추가되었다."

- id: hugo
  translation: "휴고는 Go로 작성된 정적 사이트 생성기이다. 2013년 Steve Francia에 의해 처음 개발된 휴고는 현재의 수석 개발자 Bjørn Erik Pedersen의 도움을 받아 기능, 성능 면에서 큰 향상을 이루었다."

- id: 휴고
  translation: "휴고는 Go로 작성된 정적 사이트 생성기이다. 2013년 Steve Francia에 의해 처음 개발된 휴고는 현재의 수석 개발자 Bjørn Erik Pedersen의 도움을 받아 기능, 성능 면에서 큰 향상을 이루었다."

- id: jekyll
  translation: "Jekyll은 정적 사이트 생성기입니다. GitHub의 공동 설립자인 Tom Preston-Werner가 Ruby로 작성했으며 오픈 소스 MIT 라이선스에 따라 배포됩니다."

- id: 지킬
  translation: "Jekyll은 정적 사이트 생성기입니다. GitHub의 공동 설립자인 Tom Preston-Werner가 Ruby로 작성했으며 오픈 소스 MIT 라이선스에 따라 배포됩니다."

- id: hexo
  translation: "Hexo는 빠르고 간단하고 파워풀한 블로그 프레임워크입니다. Markdown(또는 다른 언어)을 사용하여 포스트를 작성하면 Hexo는 금세 멋진 테마를 가미해서 정적인 파일을 생성해 드립니다."

- id: 헥소
  translation: "Hexo는 빠르고 간단하고 파워풀한 블로그 프레임워크입니다. Markdown(또는 다른 언어)을 사용하여 포스트를 작성하면 Hexo는 금세 멋진 테마를 가미해서 정적인 파일을 생성해 드립니다."

- id: ui
  translation: "사용자 인터페이스 또는 유저 인터페이스는 사람과 사물 또는 시스템, 특히 기계, 컴퓨터 프로그램 등 사이에서 의사소통을 할 수 있도록 일시적 또는 영구적인 접근을 목적으로 만들어진 물리적, 가상적 매개체를 뜻한다. 사용자 인터페이스는 사람들이 컴퓨터와 상호 작용하는 시스템이다."

- id: ux
  translation: "사용자 경험은 사용자가 어떤 시스템, 제품, 서비스를 직, 간접적으로 이용하면서 느끼고 생각하게 되는 총체적 경험을 말한다. 단순히 기능이나 절차상의 만족뿐 아니라 전반적인 지각 가능한 모든 면에서 사용자가 참여, 사용, 관찰하고 상호 교감을 통해서 알 수 있는 가치있는 경험이다."

- id: gui
  translation: "그래픽 사용자 인터페이스는 사용자가 편리하게 사용할 수 있도록 입출력 등의 기능을 알기 쉬운 아이콘 따위의 그래픽으로 나타낸 것이다."

- id: cui
  translation: '대화형 사용자 인터페이스(對話型使用者-, conversational user interface, CUI)는 실제 인간과의 대화를 에뮬레이트하는 컴퓨터를 위한 사용자 인터페이스이다. 역사적으로 컴퓨터는 사용자가 원하는 동작을 컴퓨터가 이해할 수 있는 명령으로 번역하기 위해 텍스트 기반 사용자 인터페이스와 그래픽 사용자 인터페이스(GUI, 예: 사용자가 "뒤로" 버튼을 누르는 것)에 의존해왔다. 연산 동작을 완수하는데 효율적인 구조를 갖추고 있으나 GUI와 관련하여 사용자의 학습 곡선이 존재한다. 그 대신 CUI는 사용자가 컴퓨터와 특정 문법적 명령이 아닌 자연어로 소통할 수 있는 기회를 제공한다.'

- id: ui/ux
  translation: "사용자 경험 디자인은 사용자가 제품, 서비스 혹은 시스템을 사용하거나 체험하는 데 있어 지각하는 것이 가능한 조직적 상호교감적인 모델을 창조하고 개발하는 디자인의 한 분야이다."

- id: garbage-collection
  translation: "쓰레기 수집은 메모리 관리 기법 중의 하나로, 프로그램이 동적으로 할당했던 메모리 영역 중에서 필요없게 된 영역을 해제하는 기능이다. 영어를 그대로 읽어 가비지 컬렉션이라 부르기도 한다. 1959년 무렵 리스프의 문제를 해결하기 위해 존 매카시가 개발하였다."

- id: gc
  translation: "쓰레기 수집은 메모리 관리 기법 중의 하나로, 프로그램이 동적으로 할당했던 메모리 영역 중에서 필요없게 된 영역을 해제하는 기능이다. 영어를 그대로 읽어 가비지 컬렉션이라 부르기도 한다. 1959년 무렵 리스프의 문제를 해결하기 위해 존 매카시가 개발하였다."

- id: ibatis
  translation: "iBATIS는 SQL에 기반한 데이터베이스와 자바, 닷넷, 루비 등을 연결시켜 주는 역할을 하는 영속성 프레임워크이다. 이러한 연결은 프로그램의 소스코드에서 SQL 문장을 분리하여 별도의 XML 파일로 저장하고 이 둘을 서로 연결시켜주는 방식으로 작동한다."

- id: 아이바티스
  translation: "iBATIS는 SQL에 기반한 데이터베이스와 자바, 닷넷, 루비 등을 연결시켜 주는 역할을 하는 영속성 프레임워크이다. 이러한 연결은 프로그램의 소스코드에서 SQL 문장을 분리하여 별도의 XML 파일로 저장하고 이 둘을 서로 연결시켜주는 방식으로 작동한다."

- id: mybatis
  translation: "MyBatis는 자바 퍼시스턴스 프레임워크의 하나로 XML 서술자나 애너테이션을 사용하여 저장 프로시저나 SQL 문으로 객체들을 연결시킨다. 마이바티스는 아파치 라이선스 2.0으로 배포되는 자유 소프트웨어이다."

- id: 마이바티스
  translation: "MyBatis는 자바 퍼시스턴스 프레임워크의 하나로 XML 서술자나 애너테이션을 사용하여 저장 프로시저나 SQL 문으로 객체들을 연결시킨다. 마이바티스는 아파치 라이선스 2.0으로 배포되는 자유 소프트웨어이다."

- id: typeorm
  translation: "TypeORM은 NodeJS, Browser, Cordova, PhoneGap, Ionic, React Native, NativeScript, Expo 및 Electron 플랫폼에서 실행할 수 있는 ORM이며 TypeScript 및 JavaScript(ES5, ES6, ES7, ES8)와 함께 사용할 수 있습니다. 그 목표는 항상 최신 JavaScript 기능을 지원하고 몇 개의 테이블이 있는 작은 응용 프로그램에서 여러 데이터베이스가 있는 대규모 엔터프라이즈 응용 프로그램에 이르기까지 데이터베이스를 사용하는 모든 종류의 응용 프로그램을 개발하는 데 도움이 되는 추가 기능을 제공하는 것입니다."

- id: 타입오알엠
  translation: "TypeORM은 NodeJS, Browser, Cordova, PhoneGap, Ionic, React Native, NativeScript, Expo 및 Electron 플랫폼에서 실행할 수 있는 ORM이며 TypeScript 및 JavaScript(ES5, ES6, ES7, ES8)와 함께 사용할 수 있습니다. 그 목표는 항상 최신 JavaScript 기능을 지원하고 몇 개의 테이블이 있는 작은 응용 프로그램에서 여러 데이터베이스가 있는 대규모 엔터프라이즈 응용 프로그램에 이르기까지 데이터베이스를 사용하는 모든 종류의 응용 프로그램을 개발하는 데 도움이 되는 추가 기능을 제공하는 것입니다."

- id: sequelize
  translation: "Sequelize는 Postgres, MySQL, MariaDB, SQLite 및 Microsoft SQL Server용 promise-기반 Node.js ORM입니다. 견고한 트랜잭션 지원, 관계, 즉시 및 지연 로딩, 읽기 복제 등을 제공합니다."

- id: knex.js
  translation: 'Knex.js(/kəˈnɛks/로 발음)는 PostgreSQL, CockroachDB, MSSQL, MySQL, MariaDB, SQLite3, Oracle 및 Amazon Redshift를 위한 "배터리 포함" SQL 쿼리 빌더로 유연하고 휴대 가능하며 재미있게 사용할 수 있도록 설계되었습니다. 기존 노드 스타일 콜백은 물론 더 깨끗한 비동기 흐름 제어를 위한 promise 인터페이스, 스트림 인터페이스, 모든 기능을 갖춘 쿼리 및 스키마 빌더, 트랜잭션 지원(savepoints 포함), 연결 풀링 및 다양한 쿼리 클라이언트와 방언 간의 표준화된 응답을 모두 제공합니다.'

- id: objection.js
  translation: "Objection.js는 Node.js용 ORM으로, 작업을 방해하지 않고 SQL과 기본 데이터베이스 엔진을 최대한 쉽게 사용할 수 있도록 합니다."

- id: prisma
  translation: "prisma란 node.js 와 Typescript를 위한 ORM open source 기술이다. prisma는 Heroku 창업자와 Graphql 개발자가 합작하여 만든 기술이기에 특히 Graphql과 잘 맞는다. Graphql 도입을 고려한다면 prisma를 선택하는 것이 좋다."

- id: jwt
  translation: "JSON 웹 토큰은 선택적 서명 및 선택적 암호화를 사용하여 데이터를 만들기 위한 인터넷 표준으로, 페이로드는 몇몇 클레임 표명을 처리하는 JSON을 보관하고 있다. 토큰은 비공개 시크릿 키 또는 공개/비공개 키를 사용하여 서명된다."

- id: websocket
  translation: "웹소켓은 하나의 TCP 접속에 전이중 통신 채널을 제공하는 컴퓨터 통신 프로토콜이다. 웹소켓 프로토콜은 2011년 IETF에 의해 RFC 6455로 표준화되었으며 웹 IDL의 웹소켓 API는 W3C에 의해 표준화되고 있다. 웹소켓은 HTTP와 구별된다."

- id: 웹소켓
  translation: "웹소켓은 하나의 TCP 접속에 전이중 통신 채널을 제공하는 컴퓨터 통신 프로토콜이다. 웹소켓 프로토콜은 2011년 IETF에 의해 RFC 6455로 표준화되었으며 웹 IDL의 웹소켓 API는 W3C에 의해 표준화되고 있다. 웹소켓은 HTTP와 구별된다."

- id: socket.io
  translation: "Socket.IO는 실시간 웹 애플리케이션을위한 JavaScript 라이브러리입니다. 웹 클라이언트와 서버간에 실시간 양방향 통신이 가능합니다. 브라우저에서 실행되는 클라이언트 측 라이브러리와 Node.js 용 서버 측 라이브러리의 두 부분으로 구성됩니다."

- id: express.js
  translation: "Express.js, 또는 간단히 익스프레스는 Node.js를 위한 웹 프레임워크의 하나로, MIT 허가서로 라이선스되는 자유-오픈 소스 소프트웨어로 출시되었다. 웹 애플리케이션, API 개발을 위해 설계되었다. Node.js의 사실상의 표준 서버 프레임워크로 불리고 있다."

- id: fastify
  translation: "fastify는 최소한의 오버헤드와 강력한 플러그인 아키텍처로 최고의 개발 경험을 제공하는데에 초점을 맞춘 웹 프레임워크이다. Hapi와 Express를 참고해 개발되었으며 이름처럼 현재 가장 빠른 웹 프레임워크 중 하나이다."

- id: netty
  translation: "네티는 프로토콜 서버, 클라이언트 등 자바 네트워크 애플리케이션 개발을 위한 비차단 입출력 클라이언트-서버 프레임워크이다. 비동기 사건 기반 네트워크 애플리케이션 프레임워크와 도구들은 TCP, UDP 소켓 서버 등 네트워크 프로그래밍을 단순하게 만들기 위해 사용된다."

- id: 네티
  translation: "네티는 프로토콜 서버, 클라이언트 등 자바 네트워크 애플리케이션 개발을 위한 비차단 입출력 클라이언트-서버 프레임워크이다. 비동기 사건 기반 네트워크 애플리케이션 프레임워크와 도구들은 TCP, UDP 소켓 서버 등 네트워크 프로그래밍을 단순하게 만들기 위해 사용된다."

- id: transaction
  translation: "데이터베이스 트랜잭션은 데이터베이스 관리 시스템 또는 유사한 시스템에서 상호작용의 단위이다. 여기서 유사한 시스템이란 트랜잭션이 성공과 실패가 분명하고 상호 독립적이며, 일관되고 믿을 수 있는 시스템을 의미한다."

- id: 트랜잭션
  translation: "데이터베이스 트랜잭션은 데이터베이스 관리 시스템 또는 유사한 시스템에서 상호작용의 단위이다. 여기서 유사한 시스템이란 트랜잭션이 성공과 실패가 분명하고 상호 독립적이며, 일관되고 믿을 수 있는 시스템을 의미한다."

- id: coroutine
  translation: "코루틴은 루틴의 일종으로서, 협동 루틴이라 할 수 있다. 상호 연계 프로그램을 일컫는다고도 표현가능하다. 루틴과 서브 루틴은 서로 비대칭적인 관계이지만, 코루틴들은 완전히 대칭적인, 즉 서로가 서로를 호출하는 관계이다."

- id: 코루틴
  translation: "코루틴은 루틴의 일종으로서, 협동 루틴이라 할 수 있다. 상호 연계 프로그램을 일컫는다고도 표현가능하다. 루틴과 서브 루틴은 서로 비대칭적인 관계이지만, 코루틴들은 완전히 대칭적인, 즉 서로가 서로를 호출하는 관계이다."

- id: webrtc
  translation: "WebRTC는 웹 브라우저 간에 플러그인의 도움 없이 서로 통신할 수 있도록 설계된 API이다. W3C에서 제시된 초안이며, 음성 통화, 영상 통화, P2P 파일 공유 등으로 활용될 수 있다."

- id: rest
  translation: "REST는 월드 와이드 웹과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처의 한 형식이다. 이 용어는 로이 필딩의 2000년 박사학위 논문에서 소개되었다. 필딩은 HTTP의 주요 저자 중 한 사람이다. 이 개념은 네트워킹 문화에 널리 퍼졌다."

- id: restful
  translation: "REST는 월드 와이드 웹과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처의 한 형식이다. 이 용어는 로이 필딩의 2000년 박사학위 논문에서 소개되었다. 필딩은 HTTP의 주요 저자 중 한 사람이다. 이 개념은 네트워킹 문화에 널리 퍼졌다."

- id: api
  translation: "API (Application Programming Interface)는 컴퓨터나 컴퓨터 프로그램 사이의 연결이다. 일종의 소프트웨어 인터페이스이며 다른 종류의 소프트웨어에 서비스를 제공한다. 이러한 연결이나 인터페이스를 빌드하거나 사용하는 방법을 기술하는 문서나 표준은 API 사양으로 부른다."

- id: heuristics
  translation: "휴리스틱 또는 발견법이란 불충분한 시간이나 정보로 인하여 합리적인 판단을 할 수 없거나, 체계적이면서 합리적인 판단이 굳이 필요하지 않은 상황에서 사람들이 빠르게 사용할 수 있게 보다 용이하게 구성된 간편추론의 방법이다."

- id: 휴리스틱
  translation: "휴리스틱 또는 발견법이란 불충분한 시간이나 정보로 인하여 합리적인 판단을 할 수 없거나, 체계적이면서 합리적인 판단이 굳이 필요하지 않은 상황에서 사람들이 빠르게 사용할 수 있게 보다 용이하게 구성된 간편추론의 방법이다."

- id: cqrs
  translation: "CQRS는 Command and Query Responsibility Segregation(명령과 조회의 책임 분리)을 나타냅니다. 이름처럼 시스템에서 명령을 처리하는 책임과 조회를 처리하는 책임을 분리하는 것이 CQRS의 핵심입니다. 이제 명령과 조회에 대해 정의할 필요가 있습니다. CQRS에서 명령은 시스템의 상태를 변경하는 작업을 의미하며 조회는 시스템의 상태를 반환하는 작업을 의미합니다. 정리하면, CQRS는 시스템의 상태를 변경하는 작업과 시스템의 상태를 반환하는 작업의 책임을 분리하는 것입니다."

- id: uml
  translation: "UML (Unified Modeling Language) 통합 모델링 언어는 소프트웨어 공학에서 사용되는 표준화된 범용 모델링 언어이다. 이 표준은 UML을 고안한 객체 관리 그룹에서 관리 하고 있다. UML은 소프트웨어 집약 시스템의 시각적 모델을 만들기 위한 도안 표기법을 포함한다."

- id: oauth
  translation: "OAuth는 인터넷 사용자들이 비밀번호를 제공하지 않고 다른 웹사이트 상의 자신들의 정보에 대해 웹사이트나 애플리케이션의 접근 권한을 부여할 수 있는 공통적인 수단으로서 사용되는, 접근 위임을 위한 개방형 표준이다."

- id: tdd
  translation: "TDD(Test-Driven-Development) 테스트 주도 개발은 매우 짧은 개발 사이클을 반복하는 소프트웨어 개발 프로세스 중 하나이다. 개발자는 먼저 요구사항을 검증하는 자동화된 테스트 케이스를 작성한다. 그런 후에, 그 테스트 케이스를 통과하기 위한 최소한의 코드를 생성한다."

- id: ddd
  translation: "DDD(Domain Driven Design) 도메인 주도 설계는 해당 도메인 전문가의 입력에 따라 도메인과 일치하도록 소프트웨어를 모델링하는 데 중점을 둔 소프트웨어 설계 접근 방식입니다. 한 가지 개념은 소프트웨어 코드의 구조와 언어가 비즈니스 도메인과 일치해야 한다는 것입니다."

- id: camel-case
  translation: "낙타의 모양에서 따온 방법이다. 첫 단어는 소문자로 시작하고, 두번째 단어부터 대문자로 시작한다. 단어와 단어 사이는 붙인다. 원문: rocket launch duration 카멜식: rocketLaunchDuration"

- id: kebab-case
  translation: '케밥이 꼬챙이에 꽂힌 모습에서 생긴 방법이다. 모든 단어가 소문자로 시작하고, 단어와 단어 사이는 "-"로 연결된다. 원문: rocket launch duration 케밥식: rocket-launch-duration'

- id: pascal-case
  translation: "카멜식과 매우 유사하지만, 차이점은 첫 단어도 대문자로 시작한다는 점이다. 하지만 몇몇 언어의 경우 관습적으로 클래스명만 대문자로 시작하는 암묵적인 규칙이 있기 때문에 조심해야 한다. 원문: rocket launch duration 파스칼식: RocketLaunchDuration"

- id: snake-case
  translation: '케밥식과 매우 유사하지만, 각 단어가 "-"이 아닌 "_"로 연결된다. 원문: rocket launch duration 스네이크식: rocket_launch_duration'

- id: virtual-memory
  translation: "가상 메모리 또는 가상 기억 장치는 메모리 관리 기법의 하나로, 기계에 실제로 이용 가능한 기억 자원을 이상적으로 추상화하여 사용자들에게 매우 큰 메모리로 보이게 만드는 것을 말한다. 각 프로그램에 실제 메모리 주소가 아닌 가상의 메모리 주소를 주는 방식이다."

- id: 가상메모리
  translation: "가상 메모리 또는 가상 기억 장치는 메모리 관리 기법의 하나로, 기계에 실제로 이용 가능한 기억 자원을 이상적으로 추상화하여 사용자들에게 매우 큰 메모리로 보이게 만드는 것을 말한다. 각 프로그램에 실제 메모리 주소가 아닌 가상의 메모리 주소를 주는 방식이다."