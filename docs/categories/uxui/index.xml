<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>uxui on Hyemi&#39;s Blog</title>
    <link>https://ohhyemi.github.io/categories/uxui/</link>
    <description>Recent content in uxui on Hyemi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 21 Dec 2021 15:28:48 +0900</lastBuildDate><atom:link href="https://ohhyemi.github.io/categories/uxui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>힉의 법칙</title>
      <link>https://ohhyemi.github.io/posts/studying23_ux3/</link>
      <pubDate>Tue, 21 Dec 2021 15:28:48 +0900</pubDate>
      
      <guid>https://ohhyemi.github.io/posts/studying23_ux3/</guid>
      <description>🔎힉의 법칙  의사결정에 걸리는 시간은 선택지의 개수와 복잡성과 비례해 늘어난다.
 🔎인지 부하  인터페이스를 익히고 인터랙션하는 데 필요한 정신적 자원의 양을 인지부하(cognitivve load)라고 한다.
  제품이나 서비스를 처음 접할 때 사용 방법을 익히는 것, 사용하는 것까지 모두 정신적 자원이 소모된다. 프로세스를 익히는 과정과 동시에 처음의 목표를 계속하여 기억해야한다. 익혀야할 정보가 많으면 목표를 잊어버릴 수도 있고 중요한 정보를 잊을 수도 있다. 결과적으로 작업이 더 어려워지는 현상을 낳는다.  💛 인지 부하의 예 💚 복잡한 티비 리모컨 나도 너무 동감하는 예시이다.</description>
    </item>
    
    <item>
      <title>피츠의 법칙</title>
      <link>https://ohhyemi.github.io/posts/studying22_ux2/</link>
      <pubDate>Sun, 19 Dec 2021 17:46:38 +0900</pubDate>
      
      <guid>https://ohhyemi.github.io/posts/studying22_ux2/</guid>
      <description>🔎피츠의 법칙  대상에 도달하는 시간은 대상까지의 거리와 대상의 크기와 함수 관계에 있다.
  터치 대상의 크기는 사용자가 정확하게 선택할 수 있을 정도로 충분히 커야한다. 터치 대상 사이에 충분한 거리를 확보해야 한다. 터치 대상은 인터페이스상에서 쉽게 도달할 수 있는 영역에 배치해야 한다.  💛 피츠의 법칙 적용 사례 💚 폼 텍스트 레이블 (form text label)  폼 텍스트 레이블은 피츠의 법칙을 보여주는 흔한 예다. 디자이너와 개발자가 텍스트 레이블 요소와 입력을 연결해두면 레이블을 탭하거나 클릭해도 입력이 선택된다.</description>
    </item>
    
    <item>
      <title>제이콥의 법칙</title>
      <link>https://ohhyemi.github.io/posts/studying20_ux1/</link>
      <pubDate>Sun, 19 Dec 2021 01:11:13 +0900</pubDate>
      
      <guid>https://ohhyemi.github.io/posts/studying20_ux1/</guid>
      <description>✏️ 포스팅 목적 최근에 산 UX/UI의 10가지 심리학 법칙(조 야블로스키 저)라는 책을 읽고 각 법칙에 대해 공부하고 정리하려고 한다.
프로그래머가 UI/UX심리학 법칙을 왜 공부하냐고 의문을 가질 수도 있지만, 내가 목표하는 것은 UI/UX프로그래머이기 때문에! 그리고 프로그래밍에만 한정하고 싶지 않다. 이후에는 디자인까지 해보고싶은&amp;hellip;!!!!
디자인은 디자이너가 하지만 어쨌든 그에 대한 반응을 프로그래머가 구현을 해야하기 또한 구현되는 모든 요소들은 프로그래머가 가장 먼저 테스트하고 가장 많이 경험한다.
디자이너 뿐 아니라 프로그래머가 이러한 지식을 가지고 있다면 좀 더 사용자의 기대에 부흥하는?</description>
    </item>
    
  </channel>
</rss>
